# Generated by Django 5.2.4 on 2025-07-07 03:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CtrPropertyColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ctr_property_column',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtrTables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('type_id', models.IntegerField(blank=True, null=True)),
                ('client_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ctr_tables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtrTableType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ctr_table_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DatContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_hide_display', models.IntegerField(blank=True, default=1, help_text='show or hide question in list vendor detail . 0 : show , 1: hide', null=True)),
            ],
            options={
                'db_table': 'dat_contacts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DatProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_rest', models.TextField(blank=True, help_text='Status of Property in Matrix Stite', null=True)),
                ('open_house_from', models.DateTimeField(blank=True, null=True)),
                ('open_house_to', models.DateTimeField(blank=True, null=True)),
                ('status_manual', models.IntegerField(blank=True, default=0, help_text='status set by user . 0 : none , 1: opend house,...', null=True)),
            ],
            options={
                'db_table': 'dat_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DatPropertyImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_rest', models.TextField(blank=True, help_text='Status of Property in Matrix Stite', null=True)),
            ],
            options={
                'db_table': 'dat_property_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DatUserAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_image', models.TextField(blank=True, null=True)),
                ('googlemap_lt', models.CharField(blank=True, max_length=255, null=True)),
                ('googlemap_ln', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dat_user_attribute',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LnkColumnMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_column_id', models.IntegerField()),
                ('column_name', models.CharField(max_length=255)),
                ('additional_logic', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lnk_column_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Activation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_index=True)),
                ('code', models.CharField(max_length=255)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'activations',
            },
        ),
        migrations.CreateModel(
            name='CommentReview',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_review', models.IntegerField(blank=True, null=True)),
                ('user_comment', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comment_review',
            },
        ),
        migrations.CreateModel(
            name='ContactsSearches',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('keyword', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_id', models.IntegerField()),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('date_login_from', models.DateTimeField(blank=True, null=True)),
                ('date_login_to', models.DateTimeField(blank=True, null=True)),
                ('login_count', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('user_created', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('user_updated', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contacts_searches',
            },
        ),
        migrations.CreateModel(
            name='DatAwards',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_id', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dat_awards',
            },
        ),
        migrations.CreateModel(
            name='DatLikeReviews',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('vendor_rating_id', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, help_text='0 : like , 1: unlike', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_id', models.IntegerField()),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('update_id', models.IntegerField()),
            ],
            options={
                'db_table': 'dat_like_reviews',
            },
        ),
        migrations.CreateModel(
            name='DatProjects',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('date_created', models.DateField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('number_view', models.IntegerField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('created_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('update_id', models.IntegerField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dat_projects',
            },
        ),
        migrations.CreateModel(
            name='DatProjectsImages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('projects_id', models.IntegerField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('created_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('update_id', models.IntegerField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dat_projects_images',
            },
        ),
        migrations.CreateModel(
            name='DatProjectsVideos',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('projects_id', models.IntegerField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('video_url', models.TextField(blank=True, null=True)),
                ('created_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('update_id', models.IntegerField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dat_projects_videos',
            },
        ),
        migrations.CreateModel(
            name='MailActivityLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('from_id', models.IntegerField()),
                ('from_mail', models.TextField(blank=True, null=True)),
                ('from_type', models.IntegerField(help_text='1 : send from contacts , 2 : send from inquiries')),
                ('from_name', models.CharField(blank=True, max_length=255, null=True)),
                ('to_id', models.IntegerField()),
                ('to_mail', models.TextField(blank=True, null=True)),
                ('to_type', models.IntegerField(help_text='1 : send from contacts , 2 : send from inquiries')),
                ('to_name', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('send_at', models.DateTimeField(blank=True, null=True)),
                ('attach_file', models.TextField(blank=True, null=True)),
                ('status_type', models.IntegerField(default=1, help_text='1:sended , 2:reply')),
                ('message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('send_status', models.IntegerField(default=0, help_text='1 : send success , 0 : send false')),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('create_ip', models.IntegerField(blank=True, null=True)),
                ('is_readed', models.IntegerField(blank=True, default=0, help_text='0: mail not read , 1 : mail had readed ', null=True)),
            ],
            options={
                'db_table': 'mail_activity_log',
            },
        ),
        migrations.CreateModel(
            name='MailSignature',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('status', models.IntegerField(blank=True, help_text='1 : use signature , 0 : not use signature', null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('create_ip', models.IntegerField(blank=True, null=True)),
                ('update_ip', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_signature',
            },
        ),
        migrations.CreateModel(
            name='Persistence',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_index=True)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'persistences',
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_index=True)),
                ('code', models.CharField(max_length=255)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'reminders',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('permissions', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='RouteMatrix',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('route_name', models.CharField(max_length=255)),
                ('guest', models.IntegerField()),
                ('user', models.IntegerField()),
                ('vendor', models.IntegerField()),
                ('agent', models.IntegerField()),
                ('system_admin', models.IntegerField()),
                ('super_admin', models.IntegerField()),
            ],
            options={
                'db_table': 'route_matrix',
            },
        ),
        migrations.CreateModel(
            name='Throttle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('type', models.CharField(max_length=255)),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'throttle',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('permissions', models.TextField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserBookmarkProject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('project_id', models.IntegerField()),
                ('book_mark_flash', models.SmallIntegerField(default=0, help_text='0 is unsaved, 1 is saved')),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_bookmark_project',
            },
        ),
        migrations.CreateModel(
            name='VendorRating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_reviewed_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('appreciation', models.TextField()),
                ('score', models.IntegerField()),
                ('user_created', models.IntegerField()),
                ('user_updated', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'vendor_rating',
            },
        ),
        migrations.CreateModel(
            name='RoleUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('role_id', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'role_users',
                'unique_together': {('user_id', 'role_id')},
            },
        ),
    ]
