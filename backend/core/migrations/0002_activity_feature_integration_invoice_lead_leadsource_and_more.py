# Generated by Django 5.2.4 on 2025-07-22 04:18

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('call', 'Phone Call'), ('email', 'Email'), ('text', 'Text Message'), ('meeting', 'Meeting'), ('showing', 'Property Showing'), ('note', 'Note'), ('task', 'Task'), ('document', 'Document')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(blank=True, related_name='participated_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('feature_key', models.CharField(max_length=50, unique=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('provider', models.CharField(max_length=100)),
                ('integration_type', models.CharField(max_length=50)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='integration_logos/')),
                ('is_premium', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('setup_instructions', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('issue_date', models.DateField()),
                ('due_date', models.DateField()),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('line_items', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('new', 'New Lead'), ('contacted', 'Contacted'), ('qualified', 'Qualified'), ('nurturing', 'Nurturing'), ('hot', 'Hot Lead'), ('appointment', 'Appointment Set'), ('showing', 'Property Showing'), ('offer', 'Offer Made'), ('contract', 'Under Contract'), ('closed', 'Closed'), ('lost', 'Lost'), ('unqualified', 'Unqualified')], default='new', max_length=20)),
                ('lead_type', models.CharField(choices=[('buyer', 'Buyer'), ('seller', 'Seller'), ('investor', 'Investor'), ('renter', 'Renter')], default='buyer', max_length=20)),
                ('lead_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('next_followup', models.DateTimeField(blank=True, null=True)),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('max_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('preferred_areas', models.TextField(blank=True)),
                ('bedrooms', models.IntegerField(blank=True, null=True)),
                ('bathrooms', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_leads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeadSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('cost_per_lead', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('conversion_rate', models.FloatField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnboardingStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('order', models.IntegerField()),
                ('is_required', models.BooleanField(default=True)),
                ('help_text', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mls_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('zip_code', models.CharField(max_length=10)),
                ('property_type', models.CharField(choices=[('single_family', 'Single Family Home'), ('condo', 'Condominium'), ('townhouse', 'Townhouse'), ('multi_family', 'Multi-Family'), ('land', 'Land'), ('commercial', 'Commercial'), ('investment', 'Investment Property')], max_length=20)),
                ('bedrooms', models.IntegerField()),
                ('bathrooms', models.DecimalField(decimal_places=1, max_digits=3)),
                ('square_feet', models.IntegerField(blank=True, null=True)),
                ('lot_size', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('year_built', models.IntegerField(blank=True, null=True)),
                ('list_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('sold', 'Sold'), ('withdrawn', 'Withdrawn'), ('expired', 'Expired')], default='active', max_length=20)),
                ('listing_date', models.DateField(auto_now_add=True)),
                ('description', models.TextField(blank=True)),
                ('features', models.TextField(blank=True)),
                ('virtual_tour_url', models.URLField(blank=True)),
                ('view_count', models.IntegerField(default=0)),
                ('favorite_count', models.IntegerField(default=0)),
                ('inquiry_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listing_agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='property_images/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('position', models.IntegerField(default=0)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.property')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Revolution Realty', max_length=100)),
                ('tagline', models.CharField(blank=True, max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='site_assets/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='site_assets/')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('meta_description', models.TextField(blank=True, max_length=160)),
                ('meta_keywords', models.TextField(blank=True)),
                ('google_analytics_id', models.CharField(blank=True, max_length=50)),
                ('smtp_host', models.CharField(blank=True, max_length=100)),
                ('smtp_port', models.IntegerField(default=587)),
                ('smtp_username', models.CharField(blank=True, max_length=100)),
                ('smtp_password', models.CharField(blank=True, max_length=100)),
                ('idx_provider', models.CharField(blank=True, max_length=100)),
                ('idx_api_key', models.CharField(blank=True, max_length=255)),
                ('idx_feed_url', models.URLField(blank=True)),
                ('primary_color', models.CharField(default='#3B82F6', max_length=7)),
                ('secondary_color', models.CharField(default='#10B981', max_length=7)),
                ('accent_color', models.CharField(default='#F59E0B', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('plan_type', models.CharField(choices=[('starter', 'Starter'), ('professional', 'Professional'), ('enterprise', 'Enterprise'), ('custom', 'Custom')], max_length=20)),
                ('description', models.TextField()),
                ('monthly_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('annual_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('setup_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('transaction_fee_percentage', models.DecimalField(decimal_places=3, default=0, max_digits=5)),
                ('max_agents', models.IntegerField(default=1)),
                ('max_leads_per_month', models.IntegerField(default=100)),
                ('max_properties', models.IntegerField(default=50)),
                ('max_storage_gb', models.IntegerField(default=1)),
                ('features', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('waiting', 'Waiting for Customer'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('is_completed', models.BooleanField(default=False)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('position', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['position', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('team_members', models.ManyToManyField(blank=True, related_name='task_boards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.IntegerField(default=0)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_lists', to='core.taskboard')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('domain', models.CharField(max_length=100, unique=True)),
                ('subdomain', models.CharField(max_length=50, unique=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('trial', 'Trial'), ('active', 'Active'), ('suspended', 'Suspended'), ('cancelled', 'Cancelled')], default='trial', max_length=20)),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True)),
                ('subscription_starts_at', models.DateTimeField(blank=True, null=True)),
                ('next_billing_date', models.DateTimeField(blank=True, null=True)),
                ('current_agents', models.IntegerField(default=0)),
                ('current_leads_this_month', models.IntegerField(default=0)),
                ('current_properties', models.IntegerField(default=0)),
                ('storage_used_gb', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_tenants', to=settings.AUTH_USER_MODEL)),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.subscriptionplan')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TenantAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_views', models.IntegerField(default=0)),
                ('unique_visitors', models.IntegerField(default=0)),
                ('bounce_rate', models.FloatField(default=0)),
                ('avg_session_duration', models.IntegerField(default=0)),
                ('leads_generated', models.IntegerField(default=0)),
                ('leads_converted', models.IntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0)),
                ('transactions_closed', models.IntegerField(default=0)),
                ('total_commission', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('avg_days_to_close', models.IntegerField(default=0)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('period_type', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='core.tenant')),
            ],
            options={
                'unique_together': {('tenant', 'period_start', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='TenantBranding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='tenant_logos/')),
                ('logo_dark', models.ImageField(blank=True, null=True, upload_to='tenant_logos/')),
                ('favicon', models.ImageField(blank=True, null=True, upload_to='tenant_favicons/')),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='tenant_heroes/')),
                ('primary_color', models.CharField(default='#3B82F6', max_length=7)),
                ('secondary_color', models.CharField(default='#10B981', max_length=7)),
                ('accent_color', models.CharField(default='#F59E0B', max_length=7)),
                ('background_color', models.CharField(default='#FFFFFF', max_length=7)),
                ('text_color', models.CharField(default='#1F2937', max_length=7)),
                ('font_family', models.CharField(default='Inter, sans-serif', max_length=100)),
                ('heading_font', models.CharField(blank=True, max_length=100)),
                ('site_title', models.CharField(blank=True, max_length=100)),
                ('tagline', models.CharField(blank=True, max_length=200)),
                ('hero_title', models.CharField(blank=True, max_length=200)),
                ('hero_subtitle', models.TextField(blank=True)),
                ('about_text', models.TextField(blank=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('youtube_url', models.URLField(blank=True)),
                ('meta_description', models.TextField(blank=True, max_length=160)),
                ('meta_keywords', models.TextField(blank=True)),
                ('google_analytics_id', models.CharField(blank=True, max_length=50)),
                ('facebook_pixel_id', models.CharField(blank=True, max_length=50)),
                ('custom_css', models.TextField(blank=True)),
                ('custom_js', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='branding', to='core.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='TenantFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=True)),
                ('usage_limit', models.IntegerField(blank=True, null=True)),
                ('current_usage', models.IntegerField(default=0)),
                ('enabled_at', models.DateTimeField(auto_now_add=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.feature')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='core.tenant')),
            ],
            options={
                'unique_together': {('tenant', 'feature')},
            },
        ),
        migrations.CreateModel(
            name='TenantIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('configuration', models.JSONField(default=dict)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_status', models.CharField(default='pending', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.integration')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='core.tenant')),
            ],
            options={
                'unique_together': {('tenant', 'integration')},
            },
        ),
        migrations.CreateModel(
            name='TenantOnboarding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.onboardingstep')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_progress', to='core.tenant')),
            ],
            options={
                'unique_together': {('tenant', 'step')},
            },
        ),
        migrations.CreateModel(
            name='TenantTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customizations', models.JSONField(default=dict)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='template', to='core.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='TenantUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Administrator'), ('agent', 'Agent'), ('assistant', 'Assistant'), ('viewer', 'Viewer')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_users', to='core.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenant_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('tenant', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('property_address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('prospect', 'Prospect'), ('listing_agreement', 'Listing Agreement'), ('buyer_agreement', 'Buyer Agreement'), ('showing', 'Showing Properties'), ('offer_submitted', 'Offer Submitted'), ('negotiating', 'Negotiating'), ('under_contract', 'Under Contract'), ('inspection', 'Inspection Period'), ('appraisal', 'Appraisal'), ('financing', 'Financing'), ('final_walkthrough', 'Final Walkthrough'), ('closing', 'Closing'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='prospect', max_length=30)),
                ('transaction_type', models.CharField(choices=[('listing', 'Listing'), ('buyer_side', 'Buyer Side'), ('dual_agency', 'Dual Agency')], max_length=20)),
                ('list_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('commission_rate', models.DecimalField(decimal_places=3, default=0.06, max_digits=5)),
                ('estimated_commission', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('contract_date', models.DateField(blank=True, null=True)),
                ('closing_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer_agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buyer_transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UsageMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('leads', 'Leads'), ('transactions', 'Transactions'), ('storage', 'Storage'), ('api_calls', 'API Calls'), ('emails_sent', 'Emails Sent')], max_length=20)),
                ('value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_metrics', to='core.tenant')),
            ],
            options={
                'unique_together': {('tenant', 'metric_type', 'period_start')},
            },
        ),
        migrations.CreateModel(
            name='WebsiteTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('preview_image', models.ImageField(upload_to='template_previews/')),
                ('template_files', models.JSONField()),
                ('is_premium', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.DeleteModel(
            name='User',
        ),
        migrations.DeleteModel(
            name='CtrPropertyColumn',
        ),
        migrations.DeleteModel(
            name='CtrTables',
        ),
        migrations.DeleteModel(
            name='CtrTableType',
        ),
        migrations.DeleteModel(
            name='DatContacts',
        ),
        migrations.DeleteModel(
            name='DatProperty',
        ),
        migrations.DeleteModel(
            name='DatPropertyImport',
        ),
        migrations.DeleteModel(
            name='DatUserAttribute',
        ),
        migrations.DeleteModel(
            name='LnkColumnMap',
        ),
        migrations.RenameField(
            model_name='datlikereviews',
            old_name='created_id',
            new_name='review_id',
        ),
        migrations.RenameField(
            model_name='mailactivitylog',
            old_name='from_id',
            new_name='user_id',
        ),
        migrations.RenameField(
            model_name='vendorrating',
            old_name='appreciation',
            new_name='review',
        ),
        migrations.RenameField(
            model_name='vendorrating',
            old_name='email',
            new_name='vendor_name',
        ),
        migrations.AlterUniqueTogether(
            name='roleuser',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='commentreview',
            name='id_review',
        ),
        migrations.RemoveField(
            model_name='commentreview',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='commentreview',
            name='user_comment',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='date_login_from',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='date_login_to',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='keyword',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='login_count',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='name',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='region',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='type',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='user_created',
        ),
        migrations.RemoveField(
            model_name='contactssearches',
            name='user_updated',
        ),
        migrations.RemoveField(
            model_name='datawards',
            name='content',
        ),
        migrations.RemoveField(
            model_name='datawards',
            name='created_id',
        ),
        migrations.RemoveField(
            model_name='datawards',
            name='image',
        ),
        migrations.RemoveField(
            model_name='datawards',
            name='title',
        ),
        migrations.RemoveField(
            model_name='datawards',
            name='updated_id',
        ),
        migrations.RemoveField(
            model_name='datawards',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='datlikereviews',
            name='status',
        ),
        migrations.RemoveField(
            model_name='datlikereviews',
            name='update_at',
        ),
        migrations.RemoveField(
            model_name='datlikereviews',
            name='update_id',
        ),
        migrations.RemoveField(
            model_name='datlikereviews',
            name='vendor_rating_id',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='city',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='content',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='created_id',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='date_created',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='image',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='number_view',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='state',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='title',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='update_at',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='update_id',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='datprojects',
            name='zip',
        ),
        migrations.RemoveField(
            model_name='datprojectsimages',
            name='content',
        ),
        migrations.RemoveField(
            model_name='datprojectsimages',
            name='created_id',
        ),
        migrations.RemoveField(
            model_name='datprojectsimages',
            name='image',
        ),
        migrations.RemoveField(
            model_name='datprojectsimages',
            name='projects_id',
        ),
        migrations.RemoveField(
            model_name='datprojectsimages',
            name='title',
        ),
        migrations.RemoveField(
            model_name='datprojectsimages',
            name='update_at',
        ),
        migrations.RemoveField(
            model_name='datprojectsimages',
            name='update_id',
        ),
        migrations.RemoveField(
            model_name='datprojectsvideos',
            name='content',
        ),
        migrations.RemoveField(
            model_name='datprojectsvideos',
            name='created_id',
        ),
        migrations.RemoveField(
            model_name='datprojectsvideos',
            name='projects_id',
        ),
        migrations.RemoveField(
            model_name='datprojectsvideos',
            name='title',
        ),
        migrations.RemoveField(
            model_name='datprojectsvideos',
            name='update_at',
        ),
        migrations.RemoveField(
            model_name='datprojectsvideos',
            name='update_id',
        ),
        migrations.RemoveField(
            model_name='datprojectsvideos',
            name='video_url',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='attach_file',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='content',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='create_at',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='create_ip',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='from_mail',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='from_name',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='from_type',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='is_readed',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='message_id',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='parent_id',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='parent_message_id',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='send_at',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='send_status',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='status_type',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='to_id',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='to_mail',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='to_name',
        ),
        migrations.RemoveField(
            model_name='mailactivitylog',
            name='to_type',
        ),
        migrations.RemoveField(
            model_name='mailsignature',
            name='create_at',
        ),
        migrations.RemoveField(
            model_name='mailsignature',
            name='create_ip',
        ),
        migrations.RemoveField(
            model_name='mailsignature',
            name='status',
        ),
        migrations.RemoveField(
            model_name='mailsignature',
            name='update_at',
        ),
        migrations.RemoveField(
            model_name='mailsignature',
            name='update_ip',
        ),
        migrations.RemoveField(
            model_name='routematrix',
            name='agent',
        ),
        migrations.RemoveField(
            model_name='routematrix',
            name='guest',
        ),
        migrations.RemoveField(
            model_name='routematrix',
            name='super_admin',
        ),
        migrations.RemoveField(
            model_name='routematrix',
            name='system_admin',
        ),
        migrations.RemoveField(
            model_name='routematrix',
            name='user',
        ),
        migrations.RemoveField(
            model_name='routematrix',
            name='vendor',
        ),
        migrations.RemoveField(
            model_name='userbookmarkproject',
            name='book_mark_flash',
        ),
        migrations.RemoveField(
            model_name='userbookmarkproject',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='vendorrating',
            name='first_name',
        ),
        migrations.RemoveField(
            model_name='vendorrating',
            name='last_name',
        ),
        migrations.RemoveField(
            model_name='vendorrating',
            name='score',
        ),
        migrations.RemoveField(
            model_name='vendorrating',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='vendorrating',
            name='user_created',
        ),
        migrations.RemoveField(
            model_name='vendorrating',
            name='user_id',
        ),
        migrations.RemoveField(
            model_name='vendorrating',
            name='user_reviewed_id',
        ),
        migrations.RemoveField(
            model_name='vendorrating',
            name='user_updated',
        ),
        migrations.AddField(
            model_name='commentreview',
            name='rating',
            field=models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='commentreview',
            name='user_id',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='contactssearches',
            name='results_count',
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='contactssearches',
            name='search_term',
            field=models.CharField(default='default', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datawards',
            name='description',
            field=models.TextField(default='Default description'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datawards',
            name='name',
            field=models.CharField(default='Default Award', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datlikereviews',
            name='liked',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='datprojects',
            name='description',
            field=models.TextField(default='Default project description'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datprojects',
            name='name',
            field=models.CharField(default='Default Project', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datprojects',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='datprojectsimages',
            name='image_path',
            field=models.CharField(default='default.jpg', max_length=500),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datprojectsimages',
            name='project',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='core.datprojects'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datprojectsvideos',
            name='project',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='core.datprojects'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datprojectsvideos',
            name='video_path',
            field=models.CharField(default='default.mp4', max_length=500),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='mailactivitylog',
            name='message',
            field=models.TextField(default='Default message'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='mailactivitylog',
            name='sent_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='mailsignature',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='mailsignature',
            name='is_default',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='routematrix',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='routematrix',
            name='permissions',
            field=models.TextField(default='read'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vendorrating',
            name='rating',
            field=models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='activation',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='activation',
            name='user_id',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='commentreview',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='commentreview',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='contactssearches',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='contactssearches',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='datawards',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='datawards',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='datawards',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='datlikereviews',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='datlikereviews',
            name='user_id',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='datprojects',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='datprojects',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='datprojectsimages',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='datprojectsimages',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='datprojectsvideos',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='datprojectsvideos',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='mailactivitylog',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='mailactivitylog',
            name='subject',
            field=models.CharField(default='Default Subject', max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='mailsignature',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='mailsignature',
            name='signature',
            field=models.TextField(default='Default Signature'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='persistence',
            name='code',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='persistence',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='persistence',
            name='user_id',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='reminder',
            name='user_id',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='role',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='role',
            name='permissions',
            field=models.TextField(default='{}'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='role',
            name='slug',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='roleuser',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='roleuser',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='routematrix',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='throttle',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='throttle',
            name='user_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='userbookmarkproject',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='userbookmarkproject',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='vendorrating',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='vendorrating',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterModelTable(
            name='activation',
            table=None,
        ),
        migrations.AlterModelTable(
            name='commentreview',
            table=None,
        ),
        migrations.AlterModelTable(
            name='contactssearches',
            table=None,
        ),
        migrations.AlterModelTable(
            name='datawards',
            table=None,
        ),
        migrations.AlterModelTable(
            name='datlikereviews',
            table=None,
        ),
        migrations.AlterModelTable(
            name='datprojects',
            table=None,
        ),
        migrations.AlterModelTable(
            name='datprojectsimages',
            table=None,
        ),
        migrations.AlterModelTable(
            name='datprojectsvideos',
            table=None,
        ),
        migrations.AlterModelTable(
            name='mailactivitylog',
            table=None,
        ),
        migrations.AlterModelTable(
            name='mailsignature',
            table=None,
        ),
        migrations.AlterModelTable(
            name='persistence',
            table=None,
        ),
        migrations.AlterModelTable(
            name='reminder',
            table=None,
        ),
        migrations.AlterModelTable(
            name='role',
            table=None,
        ),
        migrations.AlterModelTable(
            name='roleuser',
            table=None,
        ),
        migrations.AlterModelTable(
            name='routematrix',
            table=None,
        ),
        migrations.AlterModelTable(
            name='throttle',
            table=None,
        ),
        migrations.AlterModelTable(
            name='userbookmarkproject',
            table=None,
        ),
        migrations.AlterModelTable(
            name='vendorrating',
            table=None,
        ),
        migrations.AddField(
            model_name='activity',
            name='lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='core.lead'),
        ),
        migrations.AddField(
            model_name='lead',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.leadsource'),
        ),
        migrations.AddField(
            model_name='activity',
            name='property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.property'),
        ),
        migrations.AddField(
            model_name='task',
            name='lead',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.lead'),
        ),
        migrations.AddField(
            model_name='task',
            name='task_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='core.tasklist'),
        ),
        migrations.AddField(
            model_name='supportticket',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to='core.tenant'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='core.tenant'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='lead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='core.lead'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='listing_agent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='listing_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.transaction'),
        ),
        migrations.AddField(
            model_name='activity',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='core.transaction'),
        ),
        migrations.AddField(
            model_name='tenanttemplate',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.websitetemplate'),
        ),
    ]
